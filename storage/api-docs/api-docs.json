{
    "openapi": "3.0.0",
    "info": {
        "title": "Api MiniBlog APP Documentation",
        "description": "Implementation of Swagger with in Laravel",
        "contact": {
            "email": "mohamed.amine.aloui@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://127.0.0.1:8000/api",
            "description": "Demo API Server"
        }
    ],
    "paths": {
        "/user/comments/post_id={post_id}": {
            "get": {
                "tags": [
                    "Comments"
                ],
                "summary": "Get List Of Comments by post id",
                "description": "Returns all comment By post Id",
                "operationId": "getCommentsByPostId",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            }
        },
        "/user/comments": {
            "post": {
                "tags": [
                    "addComment"
                ],
                "summary": "Adding Comment",
                "description": "Adding a new Comment",
                "operationId": "addingNewComment",
                "responses": {
                    "201": {
                        "description": "Comment Added Successfully",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "200": {
                        "description": "Validation Errors"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/user/comments/{id}": {
            "get": {
                "tags": [
                    "Comment"
                ],
                "summary": "Get Comment by ID",
                "description": "Returns Comment by its id",
                "operationId": "getCommentByID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Comment"
                ],
                "summary": "Delete Comment",
                "description": "Delete Comment By ID",
                "operationId": "deleteComment",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/user/posts": {
            "get": {
                "tags": [
                    "POSTS"
                ],
                "summary": "Get List Of Posts",
                "description": "Returns all posts",
                "operationId": "getAllPosts",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            },
            "post": {
                "tags": [
                    "addPost"
                ],
                "summary": "Adding Post",
                "description": "Adding a new Post",
                "operationId": "addingNewPost",
                "responses": {
                    "201": {
                        "description": "Post Added Successfully",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "200": {
                        "description": "Validation Errors"
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/user/posts/{id}": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Get Post by ID",
                "description": "Returns Post by its id",
                "operationId": "getPostByID",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Post"
                ],
                "summary": "Update Post",
                "description": "Post Updating",
                "operationId": "updatePost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "200": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "403": {
                        "description": "Forbidden"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Post"
                ],
                "summary": "Delete Post",
                "description": "Delete Post By ID",
                "operationId": "deletePost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/user/register": {
            "post": {
                "tags": [
                    "Register"
                ],
                "summary": "Register a new user",
                "description": "Register a new user",
                "operationId": "userRegistration",
                "responses": {
                    "201": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "200": {
                        "description": "Validation Errors : email already taken or field error or missed"
                    },
                    "404": {
                        "description": "not found"
                    }
                }
            }
        },
        "/user": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Logged User Data Using Auth Token",
                "description": "Returns Logged in user data using Auth Token",
                "operationId": "getLoggedInUserData",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "401": {
                        "description": "Unauthenticated"
                    }
                }
            },
            "post": {
                "tags": [
                    "Login"
                ],
                "summary": "User Login",
                "description": "User login by email and password",
                "operationId": "userLogin",
                "responses": {
                    "200": {
                        "description": "LoggedIn",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "404": {
                        "description": "Not found or Login Failed : Invalid Credentials"
                    }
                }
            }
        },
        "/user/logout": {
            "post": {
                "tags": [
                    "logout"
                ],
                "summary": "User Logout",
                "description": "Logout User and revoke assigned Token",
                "operationId": "userLogout",
                "responses": {
                    "200": {
                        "description": "Successful operation : User Logged out",
                        "content": {
                            "application/json": {}
                        }
                    },
                    "403": {
                        "description": "User already logged-out"
                    }
                }
            }
        }
    },
    "security": [
        []
    ]
}